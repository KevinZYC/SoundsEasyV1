<!--XAML for student window and its popups -->
    <Window x:Class="SoundsEasyV1.StudentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SoundsEasyV1"
        mc:Ignorable="d"
        Title="StudentWindow" WindowState="Maximized" Height="540" Width="960">
    <Grid Background="WhiteSmoke">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="0.3*"/>
            <RowDefinition Height="0.001*"/>
            <RowDefinition Height="0.8*"/>
            <RowDefinition Height="0.2*"/>
        </Grid.RowDefinitions>
        <ProgressBar x:Name="progressStudentLoad" HorizontalAlignment="Stretch" Height="20" Margin="30,0,30,0" Grid.Row="3" VerticalAlignment="Center" Panel.ZIndex="5" Background="#FFE2E2E2"/>

        <DataGrid x:Name="dataGridStudent" Grid.Row="1" Margin="15,0,15,0" BorderThickness="0" AutoGenerateColumns="True" HeadersVisibility="Column" GridLinesVisibility="None" MouseUp="StudentRow_Click" ColumnWidth="1*" ScrollViewer.CanContentScroll="True" UseLayoutRounding="True" ColumnHeaderHeight="40" RowHeight="30" IsReadOnly="True" SelectionMode="Single">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background"  Value="WhiteSmoke"/>
                    <Setter Property="BorderBrush" Value="LightGray"/>
                    <Setter Property="BorderThickness" Value="0,0,0,2"/>
                    <Setter Property="Padding" Value="5,5,5,5"/>
                    <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                    <Setter Property="Margin" Value="0,0,0,15"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Foreground" Value="Gray"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="#9ec3ff"/>
            </DataGrid.Resources>

            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderThickness" Value="1,1,1,1"/>
                    <Setter Property="BorderBrush" Value="WhiteSmoke"/>
                    <Setter Property="TextBlock.Padding" Value="5,5,5,5"/>
                    <Setter Property="TextBlock.VerticalAlignment" Value="Stretch"/>
                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>
        <Grid Grid.Row="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2.5*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="2.5*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="0*"/>
                <ColumnDefinition Width="0*"/>
            </Grid.ColumnDefinitions>

            <ToggleButton Name="btnViewAssigned" Grid.Column="3" Content="View Assigned" Loaded="runScaleText" FontFamily="Segoe UI Semilight" HorizontalAlignment="Stretch" IsChecked="False" Grid.Row="1" VerticalAlignment="Stretch" FontStretch="ExtraExpanded" Click="btnViewStudAssign_Click">
                <ToggleButton.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Background" Value="#78acff"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#9ec3ff"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Resources>
            </ToggleButton>
            <Button Grid.Column="5" Content="Modify Student" HorizontalAlignment="Stretch" Loaded="runScaleText" FontFamily="Segoe UI Semilight" Grid.Row="1" VerticalAlignment="Stretch" FontStretch="ExtraExpanded">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#78acff"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#9ec3ff"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
            <ToggleButton Grid.Column="1" Content="Add Student" Name="btnAddStudent" Loaded="runScaleText" FontFamily="Segoe UI Semilight" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1">
                <ToggleButton.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Background" Value="#78acff"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#9ec3ff"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Resources>
            </ToggleButton>
        </Grid>
        <Popup Name="popupAddStudent" IsOpen="{Binding IsChecked, ElementName=btnAddStudent}"  Placement="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="50" Grid.Row="1" AllowsTransparency="True">
            <Border BorderThickness="2" CornerRadius="15" BorderBrush="#78acff" Background="White">
                <Grid Background="White" Margin="10" ClipToBounds="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="0.4*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Name="myPopupText" Text="Add New Student" Loaded="runScaleText" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="White" Foreground="Black" Margin="30" TextAlignment="Center"/>
                    <Button x:Name="popupCloserS" Content="  X  " Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Click="popupCloserS_click"/>
                    
                    <DataGrid Name="dataClassOptions" SelectionMode="Single" ColumnWidth="*" GridLinesVisibility="None" HeadersVisibility="Column" RowHeight="30" Grid.Row="2" Grid.Column="0" Grid.RowSpan="6" MouseUp="dataClassOptions_Click" Margin="10,10,10,40" BorderBrush="White">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background"  Value="WhiteSmoke"/>
                                <Setter Property="BorderBrush" Value="LightGray"/>
                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                                <Setter Property="Padding" Value="5,5,5,5"/>
                                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                                <Setter Property="Margin" Value="0,0,0,15"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#9ec3ff"/>
                        </DataGrid.Resources>

                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="BorderThickness" Value="1,1,1,1"/>
                                <Setter Property="BorderBrush" Value="WhiteSmoke"/>
                                <Setter Property="TextBlock.Padding" Value="5,5,5,5"/>
                                <Setter Property="TextBlock.VerticalAlignment" Value="Stretch"/>
                                <Setter Property="TextBlock.TextAlignment" Value="Left" />
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                    <TextBlock Name="txtSInfo" Loaded="runScaleText" Text = "Student Information" Grid.Row="1" Grid.Column="1" TextAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <TextBlock Name="txtSelectCl" Loaded="runScaleText" Text = "Select Class" Grid.Row="1" Grid.Column="0" TextAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <TextBlock Name="txtGr" Loaded="runScaleText" Text = "Grade" Grid.Row="5" Grid.Column="1" TextAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <TextBox Name="txtAddFirstName" Loaded="runScaleText" TextChanged="hintChangeFirstName" Text="" Background="LightGray" Grid.Row="2" FontSize="17" Grid.Column="1" Margin="15" TextAlignment="Left"/>
                    <TextBox Name="txtAddLastName" Loaded="runScaleText" TextChanged="hintChangeLastName" Text="" Background="LightGray" Grid.Row="3" FontSize="20" Grid.Column="1" Margin="15" TextAlignment="Left"/>
                    <TextBox Name="txtAddEmail" Loaded="runScaleText" TextChanged="hintChangeEmail" Text="" Background="LightGray" Grid.Row="4" FontSize="20" Grid.Column="1" Margin="15" TextAlignment="Left"/>

                    <TextBlock Name="hintFirstName" Loaded="runScaleText" IsHitTestVisible="False" Text="  Add First Name" Grid.Row="2" FontSize="20" Grid.Column="1" Foreground="Gray" Margin="10" TextAlignment="Left"/>
                    <TextBlock Name="hintLastName" Loaded="runScaleText" IsHitTestVisible="False" Text="  Add Last Name" Grid.Row="3" FontSize="20" Grid.Column="1" Foreground="Gray" Margin="10" TextAlignment="Left"/>
                    <TextBlock Name ="hintEmail" Loaded="runScaleText" IsHitTestVisible="False" Text="  Add Email" Grid.Row="4" FontSize="20" Grid.Column="1" Foreground="Gray" Margin="10" TextAlignment="Left"/>

                    <UniformGrid Grid.Row="6" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Rows="1" Margin="10,0,10,20">
                        <RadioButton Name="radioG9" VerticalAlignment="Center">9</RadioButton>
                        <RadioButton Name="radioG10" VerticalAlignment="Center">10</RadioButton>
                        <RadioButton Name="radioG11" VerticalAlignment="Center">11</RadioButton>
                        <RadioButton Name="radioG12" VerticalAlignment="Center">12</RadioButton>
                    </UniformGrid>
                    <Button Name="addStudentButton" Content=" Add Student " Grid.Column="1" Grid.Row="7" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Click="addStudentButton_Click" Margin="10"/>
                </Grid>
            </Border>
        </Popup>
        <Popup Name="popupOwnedInstruments" IsOpen="False" Placement="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowsTransparency="True">
            <Border BorderThickness="2" CornerRadius="15" BorderBrush="#78acff" Background="White">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="WhiteSmoke" ClipToBounds="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="5*"/>
                        <RowDefinition Height="0.6*"/>
                        <RowDefinition Height="0.25*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Name="txtOwnedInsTitle" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Loaded="runScaleText" TextAlignment="Center"></TextBlock>
                    <DataGrid Name="dataOwnedInstruments" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" GridLinesVisibility="None" ColumnWidth="*" RowHeight="35" IsReadOnly="True" SelectionMode="Single" HeadersVisibility="Column" Margin="15" BorderThickness="0">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background"  Value="WhiteSmoke"/>
                                <Setter Property="BorderBrush" Value="LightGray"/>
                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                                <Setter Property="Padding" Value="5,5,5,5"/>
                                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                                <Setter Property="Margin" Value="0,0,0,15"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                   Color="LightGray"/>
                        </DataGrid.Resources>

                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="BorderThickness" Value="1,1,1,1"/>
                                <Setter Property="BorderBrush" Value="WhiteSmoke"/>
                                <Setter Property="TextBlock.Padding" Value="5,5,5,5"/>
                                <Setter Property="TextBlock.VerticalAlignment" Value="Stretch"/>
                                <Setter Property="TextBlock.TextAlignment" Value="Left" />
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>

                    <Grid Background="Transparent" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Button Name="btnAddOwnedIns" Click="btnAddOwnedIns_Click" Grid.Column="1" Loaded="runScaleText" Content="Assign New Instrument" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" FontStretch="ExtraExpanded">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="10"/>
                                </Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="#4287f5"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#cef5cb"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Resources>
                        </Button>
                        <Button Name="btnRemoveOwnedIns" Click="btnRemoveOwnedIns_Click" Loaded="runScaleText" Grid.Column="3" Content="Unassign Instrument" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" FontStretch="ExtraExpanded">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="10"/>
                                </Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="#4287f5"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#cef5cb"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Resources>
                        </Button>
                    </Grid>
                </Grid>
            </Border>
            
        </Popup>
        
        <TextBlock x:Name="progressTextStudent" HorizontalAlignment="Center" Grid.Row="3" TextWrapping="Wrap" Text="Set Filters and Click Load Instruments" VerticalAlignment="Center" Panel.ZIndex="5" FontSize="14"/>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.02*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="18"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Load Student Info" HorizontalAlignment="Stretch" Grid.Row="0" VerticalAlignment="Stretch" FontStretch="ExtraExpanded" Click="btnLoadStudents_Click"/>
            <TextBox Name="txtStudentFName" Grid.Column="1" TextAlignment="Center" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="" VerticalAlignment="Stretch" FontStretch="Normal" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <TextBox Name="txtStudentLName" Grid.Column="2" TextAlignment="Center" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="" VerticalAlignment="Stretch" FontStretch="Normal" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <TextBox Name="txtStudentCourse" Grid.Column="3" TextAlignment="Center" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="" VerticalAlignment="Stretch" FontStretch="Normal" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <TextBox Name="txtStudentGrade" Grid.Column="4" TextAlignment="Center" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="" VerticalAlignment="Stretch" FontStretch="Normal" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <TextBox Name="txtStudentEmail" Grid.Column="5" TextAlignment="Center" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="" VerticalAlignment="Stretch" FontStretch="Normal" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>

            
        </Grid>
    </Grid>
</Window>
